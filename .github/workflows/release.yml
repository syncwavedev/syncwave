on:
  push:
    tags:
      - 'v*.*.*'

name: release

permissions:
  contents: write
  packages: write

jobs:
  deploy:
    name: Publish
    runs-on: ubuntu-latest

    steps:
      - uses: AutoModality/action-clean@v1
      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            syncwave/syncwave
            ghcr.io/syncwavedev/syncwave
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./packages/self-hosted/Dockerfile
          cache-from: type=registry,ref=ghcr.io/syncwavedev/syncwave-self:self-cache
          cache-to: type=registry,mode=max,ref=ghcr.io/syncwavedev/syncwave-self:self-cache
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64/v8

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Syncwave ${{ github.ref_name }}
          generate_release_notes: true
          body: |
            Docker images published with this release:
            ${{ steps.meta.outputs.tags }}

            Pull the image:
            docker pull syncwave/syncwave:${{ github.ref_name }}
