on:
  push:
    branches: [main]
    paths:
      - packages/server/**
      - packages/lib/**
      - .github/workflows/server.yml
      - tsconfig.json
  workflow_dispatch:
    inputs:
      STAGE:
        description: 'Stage to deploy (dev|prod)'
        required: true
        default: 'prod'

name: server
concurrency: ${{ github.workflow }}_${{ github.event.inputs.STAGE || 'dev' }}

permissions:
  contents: read
  packages: write

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - uses: AutoModality/action-clean@v1
      - name: Checkout
        uses: actions/checkout@v3

      - name: Evaluate stage config
        id: config
        run: |
          if [ -z "${{ github.event.inputs.STAGE }}" ]; then
            STAGE=dev
          else
            STAGE=${{ github.event.inputs.STAGE }}
          fi

          echo "STAGE=$STAGE" >> $GITHUB_OUTPUT
          echo "TAG=${{ github.run_number }}-${{ github.run_attempt }}-$STAGE" >> $GITHUB_OUTPUT

          if [ "dev" == "$STAGE" ]; then
            echo "APP_PORT=7202" >> $GITHUB_OUTPUT
            echo "METRICS_PORT=7204" >> $GITHUB_OUTPUT
            echo "SECRET_KEY=${{ secrets.JWT_SECRET_DEV }}" >> $GITHUB_OUTPUT
            echo "BASE_URL=https://dev.syncwave.dev" >> $GITHUB_OUTPUT
            echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID_DEV }}" >> $GITHUB_OUTPUT
            echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET_DEV }}" >> $GITHUB_OUTPUT

            echo "AWS_DEFAULT_REGION=${{ secrets.AWS_DEFAULT_REGION }}" >> $GITHUB_OUTPUT
            echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_OUTPUT
            echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_OUTPUT

            echo "S3_KEY_PREFIX=dev/objects/" >> $GITHUB_OUTPUT
          elif [ "prod" == "$STAGE" ]; then
            echo "APP_PORT=7201" >> $GITHUB_OUTPUT
            echo "METRICS_PORT=7203" >> $GITHUB_OUTPUT
            echo "SECRET_KEY=${{ secrets.JWT_SECRET_PROD }}" >> $GITHUB_OUTPUT
            echo "BASE_URL=https://app.syncwave.dev" >> $GITHUB_OUTPUT
            echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID_PROD }}" >> $GITHUB_OUTPUT
            echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET_PROD }}" >> $GITHUB_OUTPUT

            echo "AWS_DEFAULT_REGION=${{ secrets.AWS_DEFAULT_REGION }}" >> $GITHUB_OUTPUT
            echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_OUTPUT
            echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_OUTPUT

            echo "S3_KEY_PREFIX=prod/objects/" >> $GITHUB_OUTPUT
          else
            echo "Unknown STAGE: $STAGE"
            exit 1
          fi

      - name: Setup docker
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/build-push-action@v2
        with:
          push: true
          tags: ghcr.io/syncwavedev/syncwave-server:${{ steps.config.outputs.TAG }}
          context: '.'
          file: ./packages/server/Dockerfile
          cache-from: type=registry,ref=ghcr.io/syncwavedev/syncwave-server:cache
          cache-to: type=registry,mode=max,ref=ghcr.io/syncwavedev/syncwave-server:cache

      - name: Deploy containers
        if: success()
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.HOST_USERNAME }}
          key: ${{ secrets.HOST_KEY }}
          port: 22
          script_stop: true
          script: |
            docker login --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }} ghcr.io

            docker pull ghcr.io/syncwavedev/syncwave-server:${{ steps.config.outputs.TAG }}

            docker stop syncwave-server-${{ steps.config.outputs.STAGE }} || true
            docker rm syncwave-server-${{ steps.config.outputs.STAGE }} || true
            docker run \
              --name syncwave-server-${{ steps.config.outputs.STAGE }} \
              -p ${{ steps.config.outputs.APP_PORT }}:4567 \
              -p ${{ steps.config.outputs.METRICS_PORT }}:5678 \
              -e NODE_ENV=production \
              -e STAGE=${{ steps.config.outputs.STAGE }} \
              -e SECRET_KEY=${{ steps.config.outputs.SECRET_KEY }} \
              -e BASE_URL=${{ steps.config.outputs.BASE_URL }} \
              -e GOOGLE_CLIENT_ID=${{ steps.config.outputs.GOOGLE_CLIENT_ID }} \
              -e GOOGLE_CLIENT_SECRET=${{ steps.config.outputs.GOOGLE_CLIENT_SECRET }} \
              -e S3_BUCKET_NAME=syncwave \
              -e S3_ENDPOINT=https://fsn1.your-objectstorage.com \
              -e S3_ACCESS_KEY=${{ secrets.S3_ACCESS_KEY }} \
              -e S3_SECRET_KEY=${{ secrets.S3_SECRET_KEY }} \
              -e S3_KEY_PREFIX=${{ steps.config.outputs.S3_KEY_PREFIX }} \
              -e AWS_DEFAULT_REGION=${{ steps.config.outputs.AWS_DEFAULT_REGION }} \
              -e AWS_ACCESS_KEY_ID=${{ steps.config.outputs.AWS_ACCESS_KEY_ID }} \
              -e AWS_SECRET_ACCESS_KEY=${{ steps.config.outputs.AWS_SECRET_ACCESS_KEY }} \
              -e SUPERADMIN_EMAIL=${{ secrets.SUPERADMIN_EMAIL }} \
              -e SUPERADMIN_PASSWORD=${{ secrets.SUPERADMIN_PASSWORD }} \
              -d \
              --network phoenix \
              --restart unless-stopped \
              ghcr.io/syncwavedev/syncwave-server:${{ steps.config.outputs.TAG }}
